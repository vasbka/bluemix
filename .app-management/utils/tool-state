#!/usr/bin/env bash
# Checks the state of the tool whose PID file is given by $1 and runfile by $2
#
# Exit codes
# 0 - tool is running
# 1 - tool is not running
# 2 - tool is starting
# 3 - unknown error
pidfile=$1
runfile=$2
started=0
stopped=1
starting=2
error=3
if [[ -z "$pidfile" ]]; then
    echo "Usage: $0 [PIDFILE] [RUNFILE]" >& 2
    exit $error
fi

# If a runfile was passed, check if it's running (implying tool is being started)
if [ ! -z "$runfile" ]; then
    runfile=$(readlink -f $runfile)
    baseshell=$(basename $SHELL)
    if pgrep -fx "$baseshell $runfile" >/dev/null || pgrep -fx "$SHELL $runfile" >/dev/null
    then
        exit $starting
    fi
fi

# Not starting. Check pidfile
if [ ! -f "$pidfile" ]; then
    exit $stopped
fi

# The tool's pidfile exists, so check to see if tool is running
pid=$(cat ${pidfile} 2> /dev/null)
if [ -z "$pid" ]; then
    echo Invalid pid >&2
    exit $error
fi

# Check if $pid is running
ps -p $pid > /dev/null
running=$?
if [ "$running" -eq 0 ]; then
    exit $started
elif [ "$running" -eq 1 ]; then
    exit $stopped
fi

exit $error
